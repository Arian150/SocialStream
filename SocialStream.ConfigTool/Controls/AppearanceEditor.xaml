<UserControl x:Class="SocialStream.ConfigTool.Controls.AppearanceEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:props="clr-namespace:SocialStream.ConfigTool.Properties"
             xmlns:validators="clr-namespace:SocialStream.ConfigTool.Validators"
             xmlns:fpenums="clr-namespace:FeedProcessor.Enums;assembly=FeedProcessor"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DataContext="{StaticResource AppState}"
             d:DesignHeight="2337.65" d:DesignWidth="600">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SocialStream.ConfigTool;component/Resources/Resources.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="125" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <Border Grid.Row="0" Style="{DynamicResource SettingBackgroundStyle}" Height="125" Margin="0,0,0,10">
      <StackPanel VerticalAlignment="Bottom">
        <TextBlock Text="{x:Static props:Resources.Appearance}" Style="{DynamicResource EditorTitle}" Margin="0,-8,0,0"/>
        <TextBlock Text="{x:Static props:Resources.AppearanceEditorDescription}" Style="{DynamicResource EditorDescription}" />
      </StackPanel>
    </Border>
    <ScrollViewer x:Name="_ScrollViewer" Grid.Row="1">
      <StackPanel>
        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.AutoScrollSpeedGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.AutoScrollSpeedGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <StackPanel Margin="0,20,0,0" Orientation="Horizontal">
              <RadioButton x:Name="_DirectionLeft" Content="{x:Static props:Resources.Left}" Margin="0,0,30,0" Checked="DirectionRadio_Checked" Tag="left" />
              <RadioButton x:Name="_DirectionManual" Content="{x:Static props:Resources.Manual}" Margin="0,0,30,0" Checked="DirectionRadio_Checked" Tag="manual" />
              <RadioButton x:Name="_DirectionRight" Content="{x:Static props:Resources.Right}" Checked="DirectionRadio_Checked" Tag="right" />
            </StackPanel>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.DistributeContentGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.DistributeContentGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <StackPanel Margin="0,20,0,0" Orientation="Horizontal">
              <RadioButton Content="{x:Static props:Resources.Yes}" Margin="0,0,30,0" IsChecked="{Binding DistributeContentEvenly, Mode=OneWay}" Checked="Radio_Checked" Tag="true" />
              <RadioButton Content="{x:Static props:Resources.No}" IsChecked="{Binding DistributeContentEvenly, Converter={StaticResource BooleanConverter}, ConverterParameter=flip, Mode=OneWay}" Checked="Radio_Checked" Tag="false" />
            </StackPanel>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.VisualizationColorGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.VisualizationColorGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
              <TextBox MaxLength="9" Width="100" x:Name="_VisualizationColor" x:FieldModifier="private">
                <TextBox.Text>
                  <Binding Path="VisualizationColor" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidHexColorRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <Border Height="33" Width="33" Margin="10,0,0,0" BorderBrush="#FF666666" BorderThickness="1">
                <Border.Background>
                  <SolidColorBrush Color="{Binding ElementName=_VisualizationColor, Path=Text}" />
                </Border.Background>
              </Border>
            </StackPanel>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.ThemeColorGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.ThemeColorGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
              <TextBox MaxLength="9" Width="100" x:Name="_ThemeColor" x:FieldModifier="private">
                <TextBox.Text>
                  <Binding Path="ThemeColor" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidHexColorRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <Border Height="33" Width="33" Margin="10,0,0,0" BorderBrush="#FF666666" BorderThickness="1">
                <Border.Background>
                  <SolidColorBrush Color="{Binding ElementName=_ThemeColor, Path=Text}" />
                </Border.Background>
              </Border>
            </StackPanel>

          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.ForegroundColorGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.ForegroundColorGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
              <TextBox MaxLength="9" Width="100" x:Name="_ForegroundColor" x:FieldModifier="private">
                <TextBox.Text>
                  <Binding Path="ForegroundColor" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidHexColorRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <Border Height="33" Width="33" Margin="10,0,0,0" BorderBrush="#FF666666" BorderThickness="1">
                <Border.Background>
                  <SolidColorBrush Color="{Binding ElementName=_ForegroundColor, Path=Text}" />
                </Border.Background>
              </Border>
            </StackPanel>

          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.ImageSizeGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.ImageSizeGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <Grid Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static props:Resources.Minimum}" Margin="0,0,0,5"/>
              <TextBlock Grid.Column="2" Grid.Row="0" Text="{x:Static props:Resources.Maximum}" Margin="0,0,0,5"/>

              <TextBox Grid.Column="0" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MinImageSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <TextBox Grid.Column="1" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MaxImageSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
            </Grid>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.NewsSizeGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.NewsSizeGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <Grid Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static props:Resources.Minimum}" Margin="0,0,0,5"/>
              <TextBlock Grid.Column="2" Grid.Row="0" Text="{x:Static props:Resources.Maximum}" Margin="0,0,0,5"/>

              <TextBox Grid.Column="0" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MinNewsSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <TextBox Grid.Column="1" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MaxNewsSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
            </Grid>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.StatusSizeGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.StatusSizeGroupDescription}" Style="{DynamicResource GroupDescription}" />
            <Grid Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static props:Resources.Minimum}" Margin="0,0,0,5"/>
              <TextBlock Grid.Column="2" Grid.Row="0" Text="{x:Static props:Resources.Maximum}" Margin="0,0,0,5"/>

              <TextBox Grid.Column="0" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MinStatusSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
              <TextBox Grid.Column="1" Grid.Row="1" Margin="0,0,5,0">
                <TextBox.Text>
                  <Binding Path="MaxStatusSize" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                      <validators:IsValidSizeRule />
                    </Binding.ValidationRules>
                  </Binding>
                </TextBox.Text>
              </TextBox>
            </Grid>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.TweetOpacityGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.TweetOpacityGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <Grid HorizontalAlignment="Left" Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <Slider Grid.Column="0" Minimum="0" Maximum="1" Value="{Binding TweetOpacity}" />
              <TextBlock Margin="10,0,0,0" Grid.Column="1" Text="{Binding TweetOpacity, Converter={StaticResource DoubleToPercentageConverter}}"/>
            </Grid>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.NewsOpacityGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.NewsOpacityGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <Grid HorizontalAlignment="Left" Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <Slider Grid.Column="0" Minimum="0" Maximum="1" Value="{Binding NewsOpacity}" />
              <TextBlock Margin="10,0,0,0" Grid.Column="1" Text="{Binding NewsOpacity, Converter={StaticResource DoubleToPercentageConverter}}"/>
            </Grid>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundA}" Margin="0,0,0,10">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.NewItemAlertGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.NewItemAlertGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <TextBox Margin="0,20,0,0">
              <TextBox.Text>
                <Binding Path="NewItemAlert">
                  <Binding.ValidationRules>
                    <validators:IsValidTimeSpanValueRule />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox.Text>
            </TextBox>
          </StackPanel>
        </Border>

        <Border Style="{DynamicResource SettingBackgroundStyle}" Background="{DynamicResource SettingBackgroundB}" Margin="0">
          <StackPanel>
            <TextBlock Text="{x:Static props:Resources.BackgroundImagesGroupTitle}" Style="{DynamicResource GroupTitle}" />
            <TextBlock Text="{x:Static props:Resources.BackgroundImagesGroupDescription}" Style="{DynamicResource GroupDescription}" />

            <Grid Margin="0,20,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static props:Resources.Horizontal}" Margin="0,0,0,5"/>
              <Border Grid.Column="1" Grid.Row="0" Height="240" Width="384" MouseLeftButtonUp="Preview_MouseLeftButtonUp" Background="Transparent">
                <Image x:Name="_HorizontalPreview" x:FieldModifier="private" Stretch="Fill" RenderOptions.BitmapScalingMode="Fant" />
              </Border>
              <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static props:Resources.Vertical}" Margin="0,20,0,5"/>
              <Border Grid.Column="1" Grid.Row="1" Height="240" Width="384" Margin="0,20,0,0" MouseLeftButtonUp="Preview_MouseLeftButtonUp" Background="Transparent">
                <Image x:Name="_VerticalPreview" x:FieldModifier="private" Stretch="Fill" RenderOptions.BitmapScalingMode="Fant" />
              </Border>
            </Grid>
          </StackPanel>
        </Border>

      </StackPanel>
    </ScrollViewer>
  </Grid>
</UserControl>
